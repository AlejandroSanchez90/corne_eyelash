#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB         &kp Q  &kp W  &kp E     &kp R  &kp T                              &kp UP                &kp Y      &kp U  &kp I         &kp O    &kp P     &kp BSPC
&kp LCTRL       &kp A  &kp S  &kp D     &kp F  &kp G                    &kp LEFT  &kp ENTER  &kp RIGHT  &kp H      &kp J  &kp K         &kp L    &kp SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C     &kp V  &kp B      &kp C_MUTE              &kp DOWN              &kp N      &kp M  &kp COMMA     &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                              &kp LGUI  &mo 1  &kp SPACE                                                &kp ENTER  &mo 2  &kp LEFT_ALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&kp ESCAPE  &kp N1  &kp N2  &kp N3        &kp N4  &kp N5                                   &mmv MOVE_UP                     &kp N6          &kp N7    &kp N8    &kp N9     &kp N0   &kp BSPC
&kp LCTRL   &trans  &trans  &trans        &trans  &trans                   &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT_ARROW  &kp DOWN  &kp UP    &kp RIGHT  &trans   &kp F12
&kp LSHFT   &kp F1  &kp F2  &kp F3        &kp F4  &kp F5     &kp C_MUTE                    &mmv MOVE_DOWN                   &kp F6          &kp F7    &kp F8    &kp F9     &kp F10  &kp F11
                            &kp LEFT_GUI  &mo 1   &kp SPACE                                                                 &kp RMETA       &mo 3     &kp RALT
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&kp ESCAPE  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT                            &mmv MOVE_UP                     &kp CARET  &kp AMPS   &kp ASTRK     &kp LPAR          &kp RPAR           &kp BACKSLASH
&kp LCTRL   &trans    &trans  &trans    &trans    &trans               &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS  &kp EQUAL  &kp GRAVE     &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PIPE
&kp LSHFT   &kp CAPS  &trans  &trans    &trans    &trans     &trans                    &mmv MOVE_DOWN                   &kp UNDER  &kp PLUS   &kp TILDE     &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp TILDE
                              &kp LGUI  &mo 3     &kp SPACE                                                             &kp RET    &mo 2      &kp LEFT_ALT
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "CRTL";
            bindings = <
&kp C_POWER  &trans          &trans           &trans           &trans           &kp C_SLEEP                                 &rgb_ug RGB_HUI                   &kp C_PREV     &kp C_NEXT    &trans      &trans      &trans  &trans
&bt BT_CLR   &bt BT_SEL 0    &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4               &rgb_ug RGB_SAD  &mkp LCLK        &rgb_ug RGB_SAI  &kp C_VOL_DN   &kp C_VOL_UP  &kp C_PLAY  &kp C_MUTE  &trans  &sys_reset
&trans       &rgb_ug RGB_ON  &rgb_ug RGB_OFF  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF  &trans                     &rgb_ug RGB_HUD                   &kp C_BRI_DEC  &kp C_BRI_UP  &trans      &trans      &trans  &bootloader
                                              &trans           &mo 3            &trans                                                                        &trans         &mo 3         &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
